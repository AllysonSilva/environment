#####################
# Simple DDoS Defense
#####################

## Control Simultaneous Connections

# Limit the number of connections per single IP.
#
# Sets parameters for a shared memory zone that will keep states for various keys.
# In particular, the state includes the current number of connections.
# The key can contain text, variables, and their combination.
# Requests with an empty key value are not accounted.
#
# (Default: —)
# (Context: http)
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip_site:10m;

# Limit the number of requests for a given session.
#
# Sets parameters for a shared memory zone that will keep states for various keys.
# In particular, the state stores the current number of excessive requests.
# The key can contain text, variables, and their combination.
# Requests with an empty key value are not accounted.
#
# (Default: —)
# (Context: http)
limit_req_zone $binary_remote_addr zone=req_limit_per_ip_site:10m rate=10r/s;

######
# Maps
# (Context: http)
######

##########
## Backlist bots
##########

map $http_user_agent $deny_bot {
    default 0;
    ~*(""|google|Googlebot|bing|msnbot|yahoo|mail|Wordpress|Joomla|Drupal|feed|rss|XML-RPC|iTunes|Googlebot-Image|Googlebot-Video|Xenu|ping|Simplepie) 1;
    ~*(AltaVista|Slurp|BlackWidow|Bot|ChinaClaw|Custo|DISCo|Download|Demon|eCatch|EirGrabber|EmailSiphon|EmailWolf|Surfbot|BatchFTP|Harvest|Collector|Copier) 1;
    ~*(Express|WebPictures|ExtractorPro|FlashGet|GetRight|GetWeb!|Grafula|Go!Zilla|Go-Ahead-Got-It|Whacker|Extractor|lftp|clsHTTP|Mirror|Explorer) 1;
    ~*(rafula|HMView|HTTrack|Stripper|Sucker|Indy|InterGET|Ninja|JetCar|Spider|larbin|LeechFTP|Downloader|tool|Navroad|NearSite|NetAnts|tAkeOut|WWWOFFLE|Navigator|SuperHTTP|MIDown) 1;
    ~*(GrabNet|Snagger|Vampire|NetZIP|Octopus|Offline|PageGrabber|Foto|pavuk|pcBrowser|Openfind|ReGet|SiteSnagger|SmartDownload|SuperBot|WebSpider|Vacuum|WWW-Collector-E|LinkWalker) 1;
    ~*(Teleport|VoidEYE|WebAuto|WebCopier|WebFetch|WebGo|WebLeacher|Reaper|WebSauger|Quester|WebStripper|WebZIP|Wget|Widow|Zeus|WebBandit|Jorgee|Webclipping) 1;
    ~*(Twengabot|libwww|Python|perl|urllib|scan|Curl|email|PycURL|Pyth|PyQ|WebCollector|WebCopy|webcraw|WinHttp|okhttp|Java|Webster|Enhancer|trivial|LWP|Magnet) 1;
    ~*(Mag-Net|moget|Recorder|RepoMonkey|Siphon|AppsViewer|Lynx|Acunetix|FHscan|Baidu|Yandex|EasyDL|WebEMailExtrac|MJ12|FastProbe|spbot|DotBot|SemRush|Daum|DuckDuckGo) 1;
    ~*(Aboundex|teoma|80legs|360Spider|Alexibot|attach|BackWeb|Bandit|Bigfoot|Black.Hole|CopyRightCheck|BlowFish|Buddy|Bullseye|BunnySlippers|Cegbfeieh|CherryPicker|DIIbot) 1;
    ~*(Spyder|Crescent|AIBOT|dragonfly|Drip|ebingbong|Crawler|EyeNetIE|Foobot|flunky|FrontPage|hloader|Jyxobot|humanlinks|IlseBot|JustView|Robot|InfoTekies|Intelliseek|Jakarta) 1;
    ~*(Keyword|Iria|MarkWatch|likse|JOC|Mata.Hari|Memo|Microsoft.URL|Control|MIIxpc|Missigua|Locator|PIX|NAMEPROTECT|NextGenSearchBot|NetMechanic|NICErsPRO|Netcraft|niki-bot|NPbot|tracker) 1;
    ~*(Pockey|ProWebWalker|psbot|Pump|QueryN.Metasearch|SlySearch|Snake|Snapbot|Snoopy|sogou|SpaceBison|spanner|worm|suzuran|Szukacz|Telesoft|Intraformant|TheNomad|Titan|turingos) 1;
    ~*(URLy|Warning|VCI|WISENutbot|Xaldon|ZmEu|Zyborg|Aport|Parser|ahref|zoom|Powermarks|SafeDNS|BLEXBot|aria2|wikido|grapeshot|linkdexbot|Twitterbot|Google-HTTP-Java-Client) 1;
    ~*(Veoozbot|ScoutJet|DomainAppender|Go-http-client|SEOkicks|WHR|sqlmap|ltx71|InfoPath|Alltop|heritrix|indiensolidaritet|Experibot|magpie|RSSInclude|wp-android|Synapse) 1;
    ~*(GimmeUSAbot|istellabot|interfax|vebidoobot|Jetty|dataaccessd|Dalvik|eCairn|BazQux|Wotbox|null|scrapy-redis|weborama-fetcher|TrapitAgent|UNKNOWN|SeznamBot|BUbiNG) 1;
    ~*(cliqzbot|Deepnet|Ziba|linqia|portscout|Dataprovider|ia_archiver|MEGAsync|GroupHigh|Moreover|YisouSpider|CacheSystem|Clickagy|SMUrlExpander|XoviBot|MSIECrawler|Qwantify|JCE|tools.ua.random) 1;
    ~*(YaK|Mechanize|zgrab|Owler|Barkrowler|extlinks|achive-it|BDCbot|Siteimprove|Freshbot|WebDAV|Thumbtack|Exabot|mutant|Ukraine|NEWT|LinkextractorPro|LinkScan|LNSpiderguy) 1;
    ~*(Apache-HttpClient|Sphere|MegaIndex.ru|WeCrawlForThePeace|proximic|accelobot|searchmetrics|purebot|Ezooms|DinoPing|discoverybot|integromedb|visaduhoc|Searchbot|SISTRIX|brandwatch) 1;
    ~*(PeoplePal|PagesInventory|Nutch|HTTP_Request|Zend_Http_Client|Riddler|Netseer|CLIPish|Add\ Catalog|Butterfly|SocialSearcher|xpymep.exe|POGS|WebInDetail|WEBSITEtheWEB|CatchBot|rarely\ used) 1;
    ~*(ltbot|Wotbot|netEstate|news\ bot|omgilibot|Owlin|Mozilla--no-parent|Feed\ Parser|Feedly|Fetchbot|PHPCrawl|PhantomJS|SV1|R6_FeedFetcher|pilipinas|Proxy|PHP/5\.|DataCha0s|mobmail\ android) 1;
    #
    ~*(ahrefsbot|appengine|aqua_products|archive.org_bot|archive|asterias|attackbot|b2w|backdoorbot|becomebot|blekkobot|botalot|builtbottough|ccbot|cheesebot|chroot|clshttp|copernic) 1;
    ~*(dittospyder|dumbot|emailcollector|enterprise_search|erocrawler|eventmachine|extractorpro|stanford|surveybot|tocrawl|true_robot|copyscape|cosmos|craftbot|demon) 1;
    ~*(github|grub|hari|hatena|antenna|hloader|fairad|flaming|gaisbot|getty|gigabot|htmlparser|httplib|infonavirobot|intraformant|iron33|jamesbot|jennybot|jetbot|kenjin|leechftp) 1;
    ~*(lexibot|library|libweb|linkpadbot|linkwalker|lnspiderguy|looksmart|lwp-trivial|mass|mata|midown|mister|mj12bot|naver|nerdybot|netspider|ninja|openbot|openlink|papa|perl|perman|picscout) 1;
    ~*(python-urllib|queryn|radiation|realdownload|retriever|rma|rogerbot|screaming|frog|seo|webmasterworld|webmasterworldforumbot|webreaper|webvac|webviewer|webwhacker|wesee|woobot|xenu) 1;
    ~*(scooter|searchengineworld|searchpreview|semrushbot|semrushbot-sa|seokicks-robot|sootle|typhoeus|url_spider_pro|urldispatcher|warning|webenhancer|webleacher|propowerbot|python|spankbot) 1;
}

######################
## More fine-grained control over (not) caching
######################

# This is used by fastcgi_cache_bypass and fastcgi_no_cache.
# If you don't want certain URI's cached, add them here with a value of 1.
map $request_uri $no_cache_uri {
    default 0;
    ~^/search* 1;
    ~^/admin($|/) 1;
}

# This is used by fastcgi_cache_bypass and fastcgi_no_cache.
# To disable caching based on cookie names, add them here with a value of 1.
map $http_cookie $no_cache_cookie {
    default 0;
    ~allyson-site-([0-9a-f]+)=([^\;]+) 1;
}

##########
## SERVERS
##########

# Sets the path and other parameters of a cache.
# Cache data are stored in files.
# The file name in a cache is a result of applying the MD5 function to the cache key.
# The levels parameter defines hierarchy levels of a cache: from 1 to 3, each level accepts values 1 or 2.
#
# (Default: —)
# (Context: http)
fastcgi_cache_path /var/www/allyson.tech/storage/nginx/cache levels=1:2 keys_zone=DOMAIN_CACHE:10m max_size=1g inactive=1h use_temp_path=off;

# Defines a key for caching.
#
# (Default: —)
# (Context: http, server, location)
fastcgi_cache_key "$scheme:$request_method:$host:$request_uri";

##################
# Nginx virtual hosts (HTTPS-only)
##################

# :80 -> :443
server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    server_name allyson.tech www.allyson.tech;

    include /etc/nginx/snippets/letsencrypt.conf;

    server_name_in_redirect off;
    port_in_redirect off;
    log_not_found off;

    location / {
        # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response
        return 301 https://allyson.tech$request_uri;
    }
}

# :80 -> :443
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name www.allyson.tech;

    server_name_in_redirect off;
    port_in_redirect off;
    log_not_found off;

    # include snippets/ssl_common_certificates.conf;
    # include snippets/ssl_best_practices.conf;

    return 301 https://allyson.tech$request_uri;
}

# Default 443
server {

    ########
    #### LIMITS
    ########

    # Sets the shared memory zone and the maximum allowed number of connections for a given key value.
    # When this limit is exceeded, the server will return the error in reply to a request.
    #
    # Allow only one connection per an IP address at a time.
    #
    # In HTTP/2 and SPDY, each concurrent request is considered a separate connection.
    #
    # (Default: —)
    # (Context: http, server, location)
    limit_conn conn_limit_per_ip_site 10;

    # Sets the status code to return in response to rejected requests.
    #
    # (Default: limit_conn_status 503;)
    # (Context: http, server, location)
    limit_conn_status 429;

    # Sets the shared memory zone and the maximum burst size of requests.
    # If the requests rate exceeds the rate configured for a zone, their processing is delayed such that requests are processed at a defined rate.
    # Excessive requests are delayed until their number exceeds the maximum burst size in which case the request is terminated with an error.
    # By default, the maximum burst size is equal to zero.
    #
    # (Default: —)
    # (Context: http, server, location)
    limit_req zone=req_limit_per_ip_site burst=10 nodelay;

    # Sets the status code to return in response to rejected requests.
    #
    # (Default: limit_req_status 503;)
    # (Context: http, server, location)
    limit_req_status 429;

    ######
    #### CONFIG
    ######

    listen 443 ssl http2 default_server backlog=16384;
    listen [::]:443 ssl http2 default_server ipv6only=on;

    # Sets names of a virtual server.
    #
    # (Default: server_name "";)
    # (Context: server)
    server_name allyson.tech;

    # Configures logging
    error_log /var/log/nginx/allyson.tech.error.log warn;

    # Sets the root directory for requests.
    #
    # (Default: root html;)
    # (Context: http, server, location, if in location)
    root /var/www/allyson.tech/public;

    ## All static files will be served directly
    location ~* ^.+\.(?:css|js|gif|jpe?g|png|ico|svg|eot|otf|woff|ttf|mp4|pdf|zip|tgz|gz)$ {
        expires max;

        # Security HTTP Headers
        include snippets/security_HTTP_headers.conf;

        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        add_header Last-Modified $sent_http_Expires;

        # The directive enables or disables messages in error_log about files not found on disk
        log_not_found off;
    }

    # Prevent Hotlink
    location ~* \.(gif|png|jpe?g|ico|svg)$ {
        valid_referers none blocked ~.google. ~.bing. ~.yahoo. server_names ~($host) *.allyson.tech;
        if ($invalid_referer) {
            return 403 "Invalid Referer";
        }
    }

    # Alias assets images
    location ~ ^/assets/(/.*.(png|jpe?g))$ {
        alias /var/www/allyson.tech/public/assets/images;
        autoindex off;
    }

    # Deny access to specific files in the root folder
    location ~* (autoload\.php|composer\.(json|lock|phar)|nginx\.conf|web\.config|CONTRIBUTING\.md|eula.*\.txt|license\.txt|LICENSE\.txt|README\.md|UPGRADE-(.*)\.md|.*\.dist)$ {
        log_not_found off;
        deny all;
    }

    # Deny all direct access for these folders
    location ~* /(\.git|bin|logs|backup|tests)/.*$ {
        log_not_found off;
        deny all;
    }

    # Deny all direct access for these folders
    location ~* /(app|vendor)/.*\.(txt|xml|md|html|yaml|yml|php|sh)$ {
        log_not_found off;
        deny all;
    }

    # Deny access to dotfiles
    # Deny all attempts to access hidden files
    location ~ /\. {
        log_not_found off;
        deny all;
    }

    location ~ (^|/)\. {
        log_not_found off;
        deny all;
    }

    location ~ ~$ {
        log_not_found off;
        deny all;
    }

    # If you feel the need to purge your cache entirely:
    #     Stop nginx.
    #     Remove the directory.
    #     Start ngnix.
    # The cache is automatically updated and pruned in the background, so you shouldn't need to do so.
    location ~ /purge(/.*) {
        # fastcgi_cache_purge DOMAIN_CACHE "$scheme:$request_method:$host:$1";
    }

    location @index {
        try_files = /index.php?_url=$uri&$query_string =404;
    }

    location / {
        try_files $uri $uri/ @index;

        if ($http_user_agent = "") {
            return 403;
        }

        # Deny certain Referers
        if ($deny_bot = 1) {
            return 403;
        }

        # Deny certain Methods
        if ($request_method !~ ^(GET|HEAD)$) {
           return 444 "Invalid Request";
        }

        set $no_cache 0;

        if ($query_string != "") {
            set $no_cache 1;
        }
    }

    # Deny access to other .php-scripts
    location ~ \.php$ {
        deny all;
    }

    ## PHP-FPM Status
    # location ~ ^/(status|ping)$ {
    #     access_log off;
    #     log_not_found off;

    #     include fastcgi.conf;
    #     fastcgi_pass unix:/usr/local/var/run/php71-fpm.sock;

    #     # allow 1.2.3.4;
    #     deny all;
    # }

    ## Nginx Stats
    # location /nginx-status {
    #     # Turn on stats
    #     stub_status on;
    #     access_log off;
    #     status_format json;
    #     # Only allow access from IP
    #     # allow 1.2.3.4;
    #     deny all;
    # }

    location = /index.php {
        # Only development
        # add_header X-Fastcgi-Cache "$upstream_cache_status - $scheme:$request_method:$host:$request_uri";

        #proxy_set_header Host $host;
        #proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-Forwarded-Proto $scheme;
        #proxy_redirect off

        ###
        # Cache
        ###

        fastcgi_cache DOMAIN_CACHE;
        fastcgi_cache_valid 200 302 5m;
        fastcgi_cache_valid any 1m;
        fastcgi_cache_methods GET HEAD;
        fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
        fastcgi_cache_bypass $no_cache_uri $no_cache_cookie $no_cache;
        fastcgi_no_cache $no_cache_uri $no_cache_cookie $no_cache;
        fastcgi_cache_lock on;
        fastcgi_cache_revalidate on;
        fastcgi_cache_min_uses 3;
        fastcgi_cache_background_update on;

        ######
        # Timeouts
        ######

        fastcgi_connect_timeout 10s;
        fastcgi_read_timeout 10s;
        fastcgi_send_timeout 10s;

        ######
        # Buffers
        ######

        fastcgi_buffers 256 16k;
        fastcgi_buffer_size 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;

        ######
        # General
        ######

        # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        include fastcgi.conf;

        fastcgi_index index.php;
        fastcgi_intercept_errors on;
        fastcgi_pass unix:/var/run/php72-fpm.sock;
    }
 }
